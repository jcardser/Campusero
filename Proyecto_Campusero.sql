DROP TABLE CAMPUSERO CASCADE CONSTRAINTS;
DROP TABLE CARPA CASCADE CONSTRAINTS;
DROP TABLE PABELLON CASCADE CONSTRAINTS;
DROP TABLE CIUDAD CASCADE CONSTRAINTS;
DROP TABLE EQUIPO_PC CASCADE CONSTRAINTS;
DROP TABLE SOFTWARE CASCADE CONSTRAINTS;
DROP TABLE SOFTWARE_VIDEOJUEGO CASCADE CONSTRAINTS;
DROP TABLE FABRICANTE CASCADE CONSTRAINTS;
DROP TABLE SOFTWARE_EDUCATIVO CASCADE CONSTRAINTS;
DROP TABLE EQUIPO_SOFTWARE CASCADE CONSTRAINTS;
DROP TABLE DIMENSIONES_CARPA CASCADE CONSTRAINTS;
DROP TABLE NOMBRE_CAMPUSERO CASCADE CONSTRAINTS;
DROP TABLE EQUIPO_GAMER CASCADE CONSTRAINTS;
DROP TABLE CAMPUSERO_EQUIPO_GAMER CASCADE CONSTRAINTS;



-- **************************************************************** --
-- **************************************************************** --
-- **              CREAR Y LLENAR TABLAS DEL MODELO              ** --
-- **************************************************************** --
-- **************************************************************** --

--1
CREATE TABLE PABELLON(
ID_PABELLON NUMBER PRIMARY KEY, 
AREA NUMBER NOT NULL, --Tamaño del área del pabellon metros cuadrados
CAPACIDAD NUMBER NOT NULL,
UBICACION VARCHAR(100) NOT NULL, 
NOMBRE_PABELLON VARCHAR(100) NOT NULL --PENDIENTE ACTUALIZAR EN EL INSERT
);

-- PABELLON --
INSERT INTO PABELLON VALUES (1, 500, 40, 'Sur', 'Click Vibes');
INSERT INTO PABELLON VALUES (2, 500, 40, 'Norte', 'Bugsters');
INSERT INTO PABELLON VALUES (3, 400, 20, 'Oeste', 'Hackaton');
INSERT INTO PABELLON VALUES (4, 400, 20, 'Este', 'True Bug');
INSERT INTO PABELLON VALUES (5, 300, 10, 'Noroeste', 'InstaSoft');
INSERT INTO PABELLON VALUES (6, 300, 10, 'Suroeste', 'Los de Sur');
--SELECT * FROM PABELLON;
--DELETE FROM PABELLON;

--2
CREATE TABLE CIUDAD(
ID_CIUDAD NUMBER PRIMARY KEY,
NOM_CIUDAD VARCHAR(100) NOT NULL,
NUM_HABITANTES NUMBER,
NUM_UNIVERSIDADES NUMBER
);

--**CIUDAD**--

INSERT INTO CIUDAD  VALUES (1, 'Bogotá', 7907000, 125);
INSERT INTO CIUDAD  VALUES (2, 'Medellín', 2570000, 40);
INSERT INTO CIUDAD  VALUES (3, 'Cali', 2234000, 15);
INSERT INTO CIUDAD  VALUES (4, 'Barranquilla', 1310000, 20);
INSERT INTO CIUDAD  VALUES (5, 'Barrancabermeja', 217892, 10);
INSERT INTO CIUDAD  VALUES (6, 'Santa Marta', 560060, 10);
--SELECT * FROM CIUDAD;

--3
CREATE TABLE SOFTWARE(
ID_SOFTWARE NUMBER PRIMARY KEY,
TAMANO NUMBER, -- En GB
NOM_SOFTWARE VARCHAR(100)
);

-- SOFTWARE
INSERT INTO SOFTWARE VALUES (1, 10, 'Photoshop');
INSERT INTO SOFTWARE VALUES (2, 3, 'AutoCAD');
INSERT INTO SOFTWARE VALUES (3, 6, 'MATLAB');
INSERT INTO SOFTWARE VALUES (4, 25, 'Call Of Duty');
INSERT INTO SOFTWARE VALUES (5, 16, 'League Of Legends');
INSERT INTO SOFTWARE VALUES (6, 30, 'Fornite');
INSERT INTO SOFTWARE VALUES (7, 25, 'Gears Of War');
--SELECT * FROM SOFTWARE;

--4
CREATE TABLE FABRICANTE(
ID_FABRICANTE NUMBER PRIMARY KEY,
NOM_FABRICANTE VARCHAR(100) NOT NULL,
SITIO_WEB VARCHAR(100),
E_MAIL_FABRICANTE VARCHAR(200),
FUNDACION DATE,
PAIS_ORIGEN VARCHAR(100)
);

-- FABRICANTE
INSERT INTO FABRICANTE VALUES (1, 'Adobe Inc', 'www.adobe.com', 'support@adobe.com', TO_DATE('1982-12-01', 'YYYY-MM-DD'), 'USA');
INSERT INTO FABRICANTE VALUES (2, 'Autodesk Inc', 'www.autodesk.com', 'support@autodesk.com', TO_DATE('1982-01-30', 'YYYY-MM-DD'), 'USA');
INSERT INTO FABRICANTE VALUES (3, 'MathWorks', 'www.mathworks.com', 'support@mathworks.com', TO_DATE('1984-03-15', 'YYYY-MM-DD'), 'USA');
INSERT INTO FABRICANTE VALUES (4, 'Activision', 'www.activision.com', 'support@activision.com', TO_DATE('2005-06-03', 'YYYY-MM-DD'), 'USA');
INSERT INTO FABRICANTE VALUES (5, 'Riot Games', 'www.riot-games.com', 'support@riot-games.com', TO_DATE('2010-07-04', 'YYYY-MM-DD'), 'USA');
INSERT INTO FABRICANTE VALUES (6, 'Epic Games', 'www.riot-games.com', 'support@riot-games.com', TO_DATE('2022-08-25', 'YYYY-MM-DD'), 'USA');
--SELECT * FROM FABRICANTE;

--5
CREATE TABLE EQUIPO_GAMER (
    ID_EQUIPO NUMBER PRIMARY KEY,
    FUNDACION_EQUIPO DATE,
    NOMBRE_EQUIPO VARCHAR2(255),
    CIUDAD_EQUIPO VARCHAR2(100)--CIUDAD DE FUNDACIÓN
);

-- EQUIPO_GAMER
INSERT INTO EQUIPO_GAMER VALUES (1, TO_DATE('2015-06-20', 'YYYY-MM-DD'), 'Invictus Like', 'Bogotá');
INSERT INTO EQUIPO_GAMER VALUES (2, TO_DATE('2018-09-10', 'YYYY-MM-DD'), 'Guerreros 401', 'Medellín');
INSERT INTO EQUIPO_GAMER VALUES (3, TO_DATE('2020-03-15', 'YYYY-MM-DD'), 'Anacletos team', 'Cali');
INSERT INTO EQUIPO_GAMER VALUES (4, TO_DATE('2022-01-19', 'YYYY-MM-DD'), 'Akame Na Kill','Sincelejo');
INSERT INTO EQUIPO_GAMER VALUES (5, TO_DATE('2021-10-13', 'YYYY-MM-DD'), 'Ciber Bug','Barrancabermeja');
INSERT INTO EQUIPO_GAMER VALUES (6, TO_DATE('2024-07-11', 'YYYY-MM-DD'), 'Atack Hack','Barranquilla');

--SELECT * FROM EQUIPO_GAMER;
--DELETE FROM EQUIPO_GAMER;

--6
CREATE TABLE CARPA(
ID_CARPA NUMBER PRIMARY KEY,
CAPACIDAD NUMBER NOT NULL,
COLOR_CARPA VARCHAR(100) NOT NULL,
ID_PABELLON NUMBER REFERENCES PABELLON(ID_PABELLON) --FK
);

-- CARPA
INSERT INTO CARPA VALUES (1, 2, 'Rojo', 4);
INSERT INTO CARPA VALUES (2, 3, 'Verde', 3);
INSERT INTO CARPA VALUES (3, 1, 'Negro', 1);
INSERT INTO CARPA VALUES (4, 1, 'Negro', 2);
INSERT INTO CARPA VALUES (5, 2, 'Negro', 6);
INSERT INTO CARPA VALUES (6, 3, 'Cafe', 5);
--SELECT * FROM CARPA;

--7
CREATE TABLE EQUIPO_PC(
ID_EQUIPO_PC NUMBER PRIMARY KEY,
MARCA VARCHAR(100) NOT NULL,
RAM NUMBER NOT NULL,
PROCESADOR VARCHAR(100) NOT NULL,
ALMACENAMIENTO VARCHAR(100) NOT NULL,
SERIAL VARCHAR(100),
SISTEMA_OPERATIVO VARCHAR(100) NOT NULL,
MODELO VARCHAR(100),
ID_SOFTWARE NUMBER REFERENCES SOFTWARE(ID_SOFTWARE) -- FK
);

-- EQUIPO_PC
INSERT INTO EQUIPO_PC VALUES (1, 'Dell', 16, 'Intel i7', '512GB SSD', 'SN12345', 'Windows 11', 'XPS 15', 1);
INSERT INTO EQUIPO_PC VALUES (2, 'HP', 8, 'AMD Ryzen 5', '1TB HDD', 'SN67890', 'Linux Ubuntu', 'Pavilion', 2);
INSERT INTO EQUIPO_PC VALUES (3, 'Lenovo', 16, 'Intel i5', '256GB SSD', 'SN11122', 'Windows 10', 'ThinkPad', 3);
INSERT INTO EQUIPO_PC VALUES (4, 'Asus', 32, 'Intel i9', '2TB SSD', 'SN33344', 'Windows 11', 'ROG', 4);
INSERT INTO EQUIPO_PC VALUES (5, 'Samsung' , 32, 'AMD Ryzen 6', '500 GB SSD', 'SMPAD123', 'Windows 10', 'Ideapad',5);
INSERT INTO EQUIPO_PC VALUES (6, 'Toshiba' , 64, 'Intel i7', '2TH SSD', 'NS55T3', 'Windows 11', 'XSP123', 6);
INSERT INTO EQUIPO_PC VALUES (7, 'Lenovo' , 32, 'Intel i10', '2TH SSD', 'L1537', 'Windows 11', 'IDEAPAD12', NULL);

--SELECT * FROM EQUIPO_PC;

UPDATE EQUIPO_PC  
SET ID_SOFTWARE = NULL  
WHERE ID_EQUIPO_PC = 7;

--8
CREATE TABLE SOFTWARE_VIDEOJUEGO(
ID_SOFTWARE NUMBER PRIMARY KEY REFERENCES SOFTWARE(ID_SOFTWARE), --PK AND FK
TIPO_VIDEOJUEGO VARCHAR(100),
PUNTAJE_MAXIMO NUMBER,
ID_FABRICANTE NUMBER REFERENCES FABRICANTE(ID_FABRICANTE)--FK
);

-- SOFTWARE_VIDEOJUEGO
INSERT INTO SOFTWARE_VIDEOJUEGO VALUES (1, 'Shooter', 256000, 4);
INSERT INTO SOFTWARE_VIDEOJUEGO VALUES (2, 'MMORPG', 150000, 5);
INSERT INTO SOFTWARE_VIDEOJUEGO VALUES (3, 'Shooter', 15200, 6);
INSERT INTO SOFTWARE_VIDEOJUEGO VALUES (4, 'Shooter TPS', 356278, 6);
--SELECT * FROM SOFTWARE_VIDEOJUEGO;

--9
CREATE TABLE SOFTWARE_EDUCATIVO(
ID_SOFTWARE NUMBER PRIMARY KEY REFERENCES SOFTWARE(ID_SOFTWARE), -- PK AND FK
LOGROS VARCHAR(100)
);

-- SOFTWARE_EDUCATIVO
INSERT INTO SOFTWARE_EDUCATIVO VALUES (1, 'Certificación en diseño 3d');
INSERT INTO SOFTWARE_EDUCATIVO VALUES (2, 'Dominio de AutoCAD');
INSERT INTO SOFTWARE_EDUCATIVO VALUES (3, 'Experto en MATLAB');
--SELECT * FROM SOFTWARE_EDUCATIVO;

--10
CREATE TABLE EQUIPO_SOFTWARE(
ID_ES NUMBER PRIMARY KEY,
VERSION_INSTALADA VARCHAR(100) NOT NULL,
FECHA_INSTALACION DATE,
LICENCIA VARCHAR(100),
ESTADO VARCHAR(100),
ID_EQUIPO_PC NUMBER REFERENCES EQUIPO_PC(ID_EQUIPO_PC), -- FK
ID_SOFTWARE NUMBER REFERENCES SOFTWARE(ID_SOFTWARE) -- FK
);

-- EQUIPO_SOFTWARE
INSERT INTO EQUIPO_SOFTWARE VALUES (1, '2.1.0', TO_DATE('2023-06-15', 'YYYY-MM-DD'), 'Permanente', 'Activo', 7, 2);
INSERT INTO EQUIPO_SOFTWARE VALUES (2, '2.5.2', TO_DATE('2022-12-10', 'YYYY-MM-DD'), 'Temporal', 'Expirado', 6, 1);
INSERT INTO EQUIPO_SOFTWARE VALUES (3, '2.4.1', TO_DATE('2024-01-20', 'YYYY-MM-DD'), 'Permanente', 'Activo', 4, 4);
INSERT INTO EQUIPO_SOFTWARE VALUES (4, '2.3.4', TO_DATE('2023-09-05', 'YYYY-MM-DD'), 'Temporal', 'Activo', 5, 3);
INSERT INTO EQUIPO_SOFTWARE VALUES (5, '2.3.4', TO_DATE('2023-09-05', 'YYYY-MM-DD'), 'Temporal', 'Activo', 1, 6);
INSERT INTO EQUIPO_SOFTWARE VALUES (6, '2.3.4', TO_DATE('2023-09-05', 'YYYY-MM-DD'), 'Temporal', 'Activo', 3, 7);
INSERT INTO EQUIPO_SOFTWARE VALUES (7, '2.3.4', TO_DATE('2023-09-05', 'YYYY-MM-DD'), 'Temporal', 'Activo', 2, 5);

--SELECT * FROM EQUIPO_SOFTWARE;
--DELETE FROM EQUIPO_SOFTWARE;


--11
--En esta tabla se garantiza que cada id carpa solo tenga un atributo no duplicado de tipo Tipo_Dimension
--Por ejemplo, el ID carpa 1 solo podra tener un tipo de ancho, alto o profundo, no deberá tenr tipos duplicados.
--Funciona gracias a la  FK compuesta que se establecio entre ID_CARPA y TIPO_DIMENSION

CREATE TABLE DIMENSIONES_CARPA(
ID_CARPA NUMBER REFERENCES CARPA(ID_CARPA),
TIPO_DIMENSION VARCHAR(50) NOT NULL,
VALOR_DIMENSION NUMBER NOT NULL,
PRIMARY KEY (ID_CARPA, TIPO_DIMENSION)
);

-- DIMENSIONES_CARPA
INSERT INTO DIMENSIONES_CARPA VALUES (1, 'Altura', 2.5);
INSERT INTO DIMENSIONES_CARPA VALUES (1, 'Ancho', 4.0);
INSERT INTO DIMENSIONES_CARPA VALUES (1, 'Profundo', 2.0);
INSERT INTO DIMENSIONES_CARPA VALUES (2, 'Altura', 3.0);
INSERT INTO DIMENSIONES_CARPA VALUES (2, 'Ancho', 4.5);
INSERT INTO DIMENSIONES_CARPA VALUES (2, 'Profundo', 2.0);
INSERT INTO DIMENSIONES_CARPA VALUES (3, 'Altura', 6);
INSERT INTO DIMENSIONES_CARPA VALUES (3, 'Ancho', 4);
INSERT INTO DIMENSIONES_CARPA VALUES (3, 'Profundo', 2.0);
INSERT INTO DIMENSIONES_CARPA VALUES (4, 'Altura', 4);
INSERT INTO DIMENSIONES_CARPA VALUES (4, 'Ancho', 5);
INSERT INTO DIMENSIONES_CARPA VALUES (4, 'Profundo', 2.0);
INSERT INTO DIMENSIONES_CARPA VALUES (5, 'Altura', 3.5);
INSERT INTO DIMENSIONES_CARPA VALUES (5, 'Ancho', 4.5);
INSERT INTO DIMENSIONES_CARPA VALUES (5, 'Profundo', 2.0);
INSERT INTO DIMENSIONES_CARPA VALUES (6, 'Altura', 4.9);
INSERT INTO DIMENSIONES_CARPA VALUES (6, 'Ancho', 5.5);
INSERT INTO DIMENSIONES_CARPA VALUES (6, 'Profundo', 2.0);
--SELECT * FROM DIMENSIONES_CARPA;
--DELETE FROM DIMENSIONES_CARPA;

--12
CREATE TABLE CAMPUSERO(
ID_CAMPUSERO NUMBER PRIMARY KEY,
FECHA_NACIMIENTO DATE NOT NULL,
TELEFONO VARCHAR(10),
E_MAIL VARCHAR(200) NOT NULL,--PENDIENTE ACTUALIZAR EN EL INSERT
ID_CIUDAD NUMBER REFERENCES CIUDAD(ID_CIUDAD),  -- FK
ID_EQUIPO_PC NUMBER REFERENCES EQUIPO_PC(ID_EQUIPO_PC), -- FK 
ID_CARPA NUMBER REFERENCES CARPA(ID_CARPA) --FK
);

-- CAMPUSERO
INSERT INTO CAMPUSERO VALUES (1067950681, TO_DATE('1998-05-12', 'YYYY-MM-DD'), '3044143038', 'RollBack@gmal.com', 1, 3, 2);
INSERT INTO CAMPUSERO VALUES (1152713905, TO_DATE('2000-07-20', 'YYYY-MM-DD'), '3013887494', 'template12@gmail.com', 2, 1, 5);
INSERT INTO CAMPUSERO VALUES (98505759, TO_DATE('1970-03-18', 'YYYY-MM-DD'), '3205203540', 'bug159@hotmail.com', 3, 2, 4);
INSERT INTO CAMPUSERO VALUES (39442025, TO_DATE('1968-09-30', 'YYYY-MM-DD'), '3007199248', 'calling3574@hotmail.com', 4, 5, 3);
INSERT INTO CAMPUSERO VALUES (1150730520, TO_DATE('2001-10-12', 'YYYY-MM-DD'), '3054125030', 'memberx12@outlook.com', 5, 1, 6);
INSERT INTO CAMPUSERO VALUES (1233450680, TO_DATE('1996-06-11', 'YYYY-MM-DD'), '3007194533', 'tatanmejia@gmal.com', 6, 6, 1);


--SELECT * FROM CAMPUSERO;
--DELETE FROM CAMPUSERO;

--13
-- Con una clave compuesta podemos diferenciar los registros de un mismo campusero con su id.
CREATE TABLE NOMBRE_CAMPUSERO (
    ID_CAMPUSERO NUMBER REFERENCES CAMPUSERO(ID_CAMPUSERO),
    TIPO_NOMBRE VARCHAR2(50),
    NOMBRE_CAMPUSERO VARCHAR2(100),
    PRIMARY KEY (ID_CAMPUSERO, TIPO_NOMBRE)
);

-- NOMBRE_CAMPUSERO
INSERT INTO NOMBRE_CAMPUSERO VALUES (1067950681, 'Nombre', 'Juan Carlos');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1067950681, 'Apellido', ' Ruiz González');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1152713905, 'Nombre', 'María Marcela');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1152713905, 'Apellido', 'López Madrigal');
INSERT INTO NOMBRE_CAMPUSERO VALUES (98505759, 'Nombre', 'María Marcela');
INSERT INTO NOMBRE_CAMPUSERO VALUES (98505759, 'Apellido', 'López Madrigal');
INSERT INTO NOMBRE_CAMPUSERO VALUES (39442025, 'Nombre', 'Luis Felipe');
INSERT INTO NOMBRE_CAMPUSERO VALUES (39442025, 'Apellido', 'Lopera Cardona');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1150730520, 'Nombre', 'Marlon Stewar');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1150730520, 'Apellido', 'Fernandez Montenegro');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1233450680, 'Nombre', 'Rafael Antonio');
INSERT INTO NOMBRE_CAMPUSERO VALUES (1233450680, 'Apellido', 'Perez Ruiz');
--SELECT * FROM NOMBRE_CAMPUSERO;


--14
CREATE TABLE CAMPUSERO_EQUIPO_GAMER (
    ID_CAMPUSERO_EQUIPO NUMBER PRIMARY KEY,
    ESTADO VARCHAR2(50),
    CANTIDAD_TITULOS NUMBER,
    FECHA_INGRESO DATE NOT NULL,
    ROL VARCHAR2(50),
    ID_CAMPUSERO NUMBER REFERENCES CAMPUSERO(ID_CAMPUSERO),
    ID_EQUPO_GAMER NUMBER REFERENCES EQUIPO_GAMER(ID_EQUIPO)
);

INSERT INTO CAMPUSERO_EQUIPO_GAMER VALUES (1, 'Activo', 15, TO_DATE('2023-05-10', 'YYYY-MM-DD'), 'Líder', 1067950681, 1);
INSERT INTO CAMPUSERO_EQUIPO_GAMER VALUES (2, 'Activo', 8, TO_DATE('2022-11-20', 'YYYY-MM-DD'), 'Miembro', 1152713905, 2);
INSERT INTO CAMPUSERO_EQUIPO_GAMER VALUES (3, 'Activo', 20, TO_DATE('2024-01-05', 'YYYY-MM-DD'), 'Estratega', 98505759, 3);
INSERT INTO CAMPUSERO_EQUIPO_GAMER VALUES (4, 'Suspendido', 5, TO_DATE('2023-07-15', 'YYYY-MM-DD'), 'Soporte', 39442025, 4);
INSERT INTO CAMPUSERO_EQUIPO_GAMER VALUES (5, 'Activo', 12, TO_DATE('2024-03-01', 'YYYY-MM-DD'), 'Capitán', 1150730520, 5);
INSERT INTO CAMPUSERO_EQUIPO_GAMER VALUES (6, 'Retirado', 7, TO_DATE('2021-09-30', 'YYYY-MM-DD'), 'Miembro', 1233450680, 6);
--SELECT * FROM CAMPUSERO_EQUIPO_GAMER;


-- **************************************************************** --
-- **************************************************************** --
-- **                  CONSULTAS REALIZADAS                      ** --
-- **************************************************************** --
-- **************************************************************** --

--SELECT 
    --eg.NOMBRE_EQUIPO AS EQUIPO_GAMER,
   -- s.NOM_SOFTWARE AS SOFTWARE
--FROM EQUIPO_GAMER eg
--JOIN EQUIPO_PC epc ON eg.ID_EQUIPO = epc.ID_EQUIPO_PC
--JOIN EQUIPO_SOFTWARE es ON epc.ID_EQUIPO_PC = es.ID_EQUIPO_PC
--JOIN SOFTWARE s ON es.ID_SOFTWARE = s.ID_SOFTWARE
--ORDER BY eg.NOMBRE_EQUIPO;


-- Realizar una consulta en la que se muestren los datos pel campusero, incluida la ciudad de donde viene
-- que muestre la carpa en la que está ubicado y el pabellon en donde se encuentra

SELECT ID_CAMPUSERO, 
       NOMBRE_COMPLETO,
       FECHA_NACIMIENTO, 
       E_MAIL, 
       NOM_CIUDAD, 
       COLOR_CARPA, 
       UBICACION_PABELLON, 
       NOMBRE_PABELLON,
       MARCA_PC,  
       MODELO_PC,  
       SISTEMA_OPERATIVO
FROM (
    SELECT CA.ID_CAMPUSERO, 
           (SELECT LISTAGG(NC.NOMBRE_CAMPUSERO, ' ') WITHIN GROUP (ORDER BY NC.TIPO_NOMBRE) 
            FROM NOMBRE_CAMPUSERO NC 
            WHERE NC.ID_CAMPUSERO = CA.ID_CAMPUSERO) AS NOMBRE_COMPLETO,
           CA.FECHA_NACIMIENTO, 
           CA.E_MAIL, 
           CI.NOM_CIUDAD, 
           CR.COLOR_CARPA, 
           PA.UBICACION AS UBICACION_PABELLON, 
           PA.NOMBRE_PABELLON AS NOMBRE_PABELLON,
           EP.MARCA AS MARCA_PC,  
           EP.MODELO AS MODELO_PC,  
           EP.SISTEMA_OPERATIVO,
           ROW_NUMBER() OVER (PARTITION BY CA.ID_CAMPUSERO ORDER BY CA.ID_CAMPUSERO) AS RN
    FROM CAMPUSERO CA
    JOIN CIUDAD CI ON CA.ID_CIUDAD = CI.ID_CIUDAD  
    JOIN CARPA CR ON CA.ID_CARPA = CR.ID_CARPA  
    JOIN PABELLON PA ON CR.ID_PABELLON = PA.ID_PABELLON  
    JOIN EQUIPO_PC EP ON CA.ID_EQUIPO_PC = EP.ID_EQUIPO_PC  
) WHERE RN = 1
ORDER BY ID_CAMPUSERO;

--

--Realizar una consulta que permita traer solo los equipo_pc que tengan un software instalado

SELECT EP.ID_EQUIPO_PC, EP.MARCA, EP.MODELO, 
       S.NOM_SOFTWARE, S.TAMANO
FROM EQUIPO_PC EP
LEFT JOIN SOFTWARE S ON EP.ID_SOFTWARE = S.ID_SOFTWARE
WHERE S.ID_SOFTWARE IS NOT NULL;

--Realizar una consulta que permita mostrar los pabellones con carpa instalada

SELECT PA.ID_PABELLON, PA.NOMBRE_PABELLON, PA.UBICACION,
       C.COLOR_CARPA AS COLOR
FROM PABELLON PA
LEFT JOIN CARPA C ON PA.ID_PABELLON = C.ID_PABELLON
WHERE C.ID_CARPA IS NOT NULL;

--Realizar una consulta que muestre los pabellones sin carpas instaladas

SELECT PA.ID_PABELLON, PA.NOMBRE, PA.UBICACION,
       C.COLOR_CARPA AS COLOR
FROM PABELLON PA
LEFT JOIN CARPA C ON PA.ID_PABELLON = C.ID_PABELLON
WHERE C.ID_CARPA IS  NULL;

-----

-- Mostrar la ciudad que tenga campuseros registrados pero no tenga equipos 

SELECT CI.NOM_CIUDAD 
FROM CIUDAD CI
JOIN CAMPUSERO C ON CI.ID_CIUDAD = C.ID_CIUDAD 

MINUS

SELECT CI.NOM_CIUDAD 
FROM CIUDAD CI
JOIN EQUIPO_GAMER EG ON CI.NOM_CIUDAD = EG.CIUDAD_EQUIPO;

--Realizar una consulta donde muestre las ciudades con campuseros o equipos gamer registrados

SELECT CI.NOM_CIUDAD 
FROM CIUDAD CI
JOIN CAMPUSERO C ON CI.ID_CIUDAD = C.ID_CIUDAD 

UNION

SELECT CI.NOM_CIUDAD 
FROM CIUDAD CI
JOIN EQUIPO_GAMER EG ON CI.NOM_CIUDAD = EG.CIUDAD_EQUIPO;


----

--Realizar una consulta que permita mostrar los nombres de los campusros que vienen de las ciudades con más habitantes. 
SELECT 
    (SELECT NOMBRE_CAMPUSERO 
     FROM NOMBRE_CAMPUSERO 
     WHERE TIPO_NOMBRE = 'Nombre' AND ID_CAMPUSERO = C.ID_CAMPUSERO) 
    || ' ' || 
    (SELECT NOMBRE_CAMPUSERO 
     FROM NOMBRE_CAMPUSERO 
     WHERE TIPO_NOMBRE = 'Apellido' AND ID_CAMPUSERO = C.ID_CAMPUSERO) 
    AS NOMBRE_COMPLETO, 
    C.E_MAIL 
FROM CAMPUSERO C
WHERE C.ID_CIUDAD = (
    SELECT ID_CIUDAD 
    FROM CIUDAD 
    WHERE NUM_HABITANTES = (SELECT MAX(NUM_HABITANTES) FROM CIUDAD)
);

--************************--
--PROCEDIMIENTO ALMACENADO--
--************************--

--Realizar un procedimiento almacenado que calcule la edad de los campuseros teniendo en cuenta su fecha de nacimiento y el año actual, 
--la información debe ser registrada en una tabla de auditoria, implementar un cursor que recorra las edades de los campuseros en la tabla 
--Campusero, utilizar una función que permita realizar el calculo de edad teniendo en cuenta la fecha de nacimiento. 
--Es requerido manejar errores en el procedimiento almacenado. 


-- Función que permite calcular la edad
CREATE OR REPLACE FUNCTION CALCULAR_EDAD(FECHA_NAC DATE) RETURN NUMBER IS -- crear una función nueva o reempalzarla
    EDAD NUMBER; --declara una variable llamada edad
BEGIN
    EDAD := TRUNC(MONTHS_BETWEEN(SYSDATE, FECHA_NAC) / 12); -- calcula la diferencia entre la fecha actual y la de nacimiento, redondea hacia abajo el resultado
    RETURN EDAD;-- devuelve la edad en meses
END CALCULAR_EDAD;
/

CREATE TABLE AUDITORIA_CAMPUSERO (
    ID_CAMPUSERO NUMBER,
    FECHA_NACIMIENTO DATE,
    EDAD_CALCULADA NUMBER,
    FECHA_REGISTRO DATE DEFAULT SYSDATE
);

-- PROCEDIMIENTO ALMACENADO
CREATE OR REPLACE PROCEDURE CALCULAR_EDADES IS -- Crear o reemplazar un procedimiento almacenado nuevo 
    CURSOR CURSOR_CAMP IS  -- declara un cursor_camp
        SELECT ID_CAMPUSERO, FECHA_NACIMIENTO FROM CAMPUSERO; -- El cursor selecciona todas las fechas de nacimiento de la tabla campusero por id_campusero
    --Almacena temporales de los valores obtenidos en el cursor
    ID_C NUMBER;
    FECHA_NAC DATE;
    EDAD NUMBER;
BEGIN
-- Recorremos cada fila de campusero, obteniendo la fecha y el id del campuseo (cédula)
    FOR R IN CURSOR_CAMP LOOP
        ID_C := R.ID_CAMPUSERO;
        FECHA_NAC := R.FECHA_NACIMIENTO;
        EDAD := CALCULAR_EDAD(FECHA_NAC);

        INSERT INTO AUDITORIA_CAMPUSERO (ID_CAMPUSERO, FECHA_NACIMIENTO, EDAD_CALCULADA)
        VALUES (ID_C, FECHA_NAC, EDAD);
    END LOOP;

    COMMIT;
EXCEPTION  --- MANEJO DE ERRORES
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('ERROR DETECTADO: '); --MENSAJE POR CONSOLA SI TENEMOS ERROR
        ROLLBACK;
END CALCULAR_EDADES;
/

-- TRIGGER AUDITOR
CREATE OR REPLACE TRIGGER TRIGGER_FECHA
BEFORE UPDATE ON CAMPUSERO
FOR EACH ROW
BEGIN
    INSERT INTO AUDITORIA_CAMPUSERO (ID_CAMPUSERO, FECHA_NACIMIENTO, EDAD_CALCULADA)
    VALUES (:NEW.ID_CAMPUSERO, :NEW.FECHA_NACIMIENTO, CALCULAR_EDAD(:NEW.FECHA_NACIMIENTO));
END;
/

SELECT 
    ID_CAMPUSERO, 
    FECHA_NACIMIENTO, 
    CALCULAR_EDAD(FECHA_NACIMIENTO) AS EDAD
FROM CAMPUSERO;



COMMIT